name: Upload a Build Artifact

on:
  push:
    branches: [seolroh]
  pull_request:
    branches: [seolroh]

jobs:
  # job의 이름 설정
  build:
    env:
      path: khu-data-studio-ui-main

    # 해당 job을 실행하는 운영 체제
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # node.js 환경설정
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.5.1
        with:
          node-version: '10.15.1'
          node-version-file: '.node-version'
      # 패키지 설치 및 빌드
      - name: Install dependencies
        run: npm install
      # 빌드
      - name: npm run build
        run: npm run build
        env:
          NODE_ENV: production
      # Artifact name
      - name: Temporarily save build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: target
          retention-days: 1
  docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: build
    env:
      REPO: ${{ secrets.MLOPS_UI_DOCKER_REPO }}
    steps:
      - uses: actions/checkout@v2
      - name: Docker Hub Sign-in
        run: docker login --username=${{ secrets.MLOPS_UI_DOCKER_ID }} --password=${{ secrets.MLOPS_UI_DOCKER_PW }}
      - name: Building Docker Image
        run: docker build -t ${{ secrets.MLOPS_UI_DOCKER_REPO }}:latest -t ${{ secrets.MLOPS_UI_DOCKER_REPO }}:${GITHUB_RUN_ID} .
      - name: Publish Docker Image
        run: docker push ${{ secrets.MLOPS_UI_DOCKER_REPO }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker
  #   steps:
  #     - name: Deploy to Firebase
  #       uses: w9jds/firebase-action@v1.1.0
  #       with:
  #         args: deploy
  #       env:
  #         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  #         PROJECT_ID: chez-mout